package generator

import "text/template"

var tpl = template.Must(template.New("generated").
	Parse(`
// Code generated by github.com/mazei513/slice-gen, DO NOT EDIT.
package {{.Package}}

func Delete{{.Name}}(i int, a []{{.ObjType}}) []{{.ObjType}} {
	s := make([]{{.ObjType}}, i, len(a)-1)
	copy(s, a)
	return append(s, a[i+1:]...)
}
func DeleteRange{{.Name}}(from, to int, a []{{.ObjType}}) []{{.ObjType}} {
	s := make([]{{.ObjType}}, from, len(a)-(to-from))
	copy(s, a)
	return append(s, a[to+1:]...)
}
func Insert{{.Name}}(i int, o {{.ObjType}}, a []{{.ObjType}}) []{{.ObjType}} {
	var zero {{.ObjType}}
	s := append(a, zero)
	copy(s[i+1:], a[i:])
	s[i] = o
	return s
}
func Push{{.Name}}(o {{.ObjType}}, a []{{.ObjType}}) []{{.ObjType}} {
	return append(a, o)
}
func Pop{{.Name}}(a []{{.ObjType}}) ({{.ObjType}}, []{{.ObjType}}) {
	return a[len(a)-1], append([]{{.ObjType}}(nil), a[:len(a)-1]...)
}
func Unshift{{.Name}}(o {{.ObjType}}, a []{{.ObjType}}) []{{.ObjType}} {
	return append([]{{.ObjType}}{o}, a...)
}
func Shift{{.Name}}(a []{{.ObjType}}) ({{.ObjType}}, []{{.ObjType}}) {
	return a[0], append([]{{.ObjType}}(nil), a[1:]...)
}
func Filter{{.Name}}(a []{{.ObjType}}, f func({{.ObjType}}) bool) []{{.ObjType}} {
	b := make([]{{.ObjType}}, 0, len(a))
	for _, x := range a {
		if f(x) {
			b = append(b, x)
		}
	}
	return b
}
`))
