// Code generated by github.com/mazei513/slice-gen, DO NOT EDIT.
package tests

func DeleteTestObj(i int, a []testObj) []testObj {
	return append(a[:i], a[i+1:]...)
}
func DeleteRangeTestObj(from, to int, a []testObj) []testObj {
	return append(a[:from], a[to+1:]...)
}
func InsertTestObj(i int, o testObj, a []testObj) []testObj {
	s := append(a, testObj{})
	copy(s[i+1:], a[i:])
	s[i] = o
	return s
}
func PushTestObj(o testObj, a []testObj) []testObj {
	return append(a, o)
}
func PopTestObj(a []testObj) (testObj, []testObj) {
	return a[len(a)-1], append([]testObj(nil), a[:len(a)-1]...)
}
func UnshiftTestObj(o testObj, a []testObj) []testObj {
	return append([]testObj{o}, a...)
}
func ShiftTestObj(a []testObj) (testObj, []testObj) {
	return a[0], append([]testObj(nil), a[1:]...)
}
func FilterTestObj(a []testObj, f func(testObj) bool) []testObj {
	b := a[:0]
	for _, x := range a {
		if f(x) {
			b = append(b, x)
		}
	}
	return b
}
